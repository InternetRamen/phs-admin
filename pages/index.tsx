import type { NextPage } from "next";
import Head from "next/head";

import { initializeApp } from "firebase/app";

import { getAuth, signInWithPopup, GoogleAuthProvider } from "firebase/auth";
import { useRef, useState } from "react";
import { useRouter } from "next/router";
import {
    Modal,
    ModalOverlay,
    ModalContent,
    ModalHeader,
    ModalFooter,
    ModalCloseButton,
    Button,
    useDisclosure,
} from "@chakra-ui/react";
const Home: NextPage = () => {
    const firebaseConfig = {
        apiKey: "AIzaSyBrCUdCf4V6XFOUoLrp2unufCJaidoKYlA",
        authDomain: "poolesvillehacks1.firebaseapp.com",
        projectId: "poolesvillehacks1",
        storageBucket: "poolesvillehacks1.appspot.com",
        messagingSenderId: "376208034987",
        appId: "1:376208034987:web:84fc7ac43746b2dd013bee",
        measurementId: "G-QNQ6BJ0ZY7",
    };

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const provider = new GoogleAuthProvider();
    const auth = getAuth();
    const router = useRouter();
    
    const { isOpen, onOpen, onClose } = useDisclosure();
    const LoginWithGoogle = () => {
        signInWithPopup(auth, provider)
            .then((result) => {
                // This gives you a Google Access Token. You can use it to access the Google API.
                const credential =
                    GoogleAuthProvider.credentialFromResult(result);
                const token = credential?.accessToken;
                // The signed-in user info.
                const user = result.user;
                if (!user.email?.endsWith("@poolesvillehacks.tech")) {
                    onOpen();
                    auth.signOut();
                } else {
                    router.push("/dashboard");
                }
                console.log(user);
            })
            .catch((error) => {
                // Handle Errors here.
                const errorCode = error.code;
                const errorMessage = error.message;
                console.error(errorCode + errorMessage);
            });
    };

    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="w-screen h-screen flex items-center justify-center">
                <Modal isOpen={isOpen} onClose={onClose}>
                    <ModalOverlay />
                    <ModalContent className="p-4">
                        Restricted, please login with a @poolesvillehacks.tech
                        email.
                    </ModalContent>
                    <ModalFooter>
                        <Button onClick={onClose}>Close</Button>
                    </ModalFooter>
                </Modal>
                <div className="p-4 flex flex-col items-center justify-center gap-4">
                    <h1 className="text-4xl">poolesville_hacks admin</h1>

                    <Button className="btn" onClick={LoginWithGoogle}>
                        Login With Google
                    </Button>
                </div>
            </main>
        </div>
    );
};

export default Home;
